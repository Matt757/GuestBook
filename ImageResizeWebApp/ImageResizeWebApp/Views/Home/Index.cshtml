@{
    ViewData["Title"] = "Home Page";
}


<!-- Client side libs required  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/css/blueimp-gallery.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

<style>
    html {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    main {
        margin: 20px;
    }

    #gallery-note {
        font-size: smaller
    }

    .blueimp-gallery {
        margin: 25px;
        max-width: 150px;
        padding-bottom: 150px;
    }

    .dropzone {
        border: 3px dashed #00a1f1;
        background: #F0F8FF;
        margin: 25px;
        border-radius: 5px;
        max-width: 400px;
    }

    .dropzone .dz-message {
        font-weight: 350;
    }

    .dropzone .dz-message .note {
        font-family: sans-serif;
        font-size: 18px;
        font-weight: 200;
        display: block;
        margin-top: 1.5rem;
    }
</style>


<main>
    <div class="box header">
        <h1><span class="fa fa-user-circle-o"></span> <span id="page-title">Guest Book</span></h1>
    </div>
    
    <div class="box content">
        <hr>
        <h2>Write new review</h2>
         <div>
                    <form action="/api/images/upload"
                         class="dropzone needsclick dz-clickable" 
                         id="image-upload"
                         method="post"
                         enctype="multipart/form">
        
                        <div class="dz-message needsclick">
                            <span class="note needsclick">
                                Drop files here or click to upload.
                            </span>
                        </div>
                    </form>
                </div>
        <form id="addReviewForm" method="post" enctype="application/x-www-form-urlencoded">
            <input class="btn btn-primary" type="text" id="review" name="review"></input>
            <input class="btn btn-primary" type="submit"/>
        </form>
        <h2>Reviews</h2>
            <!-- <p><span id="gallery-note">Gallery refreshes from storage container image links every 5 seconds.</span></p> -->
            <div id="stored-images"></div>

            <!-- The Gallery as inline carousel, can be positioned anywhere on the page -->
            <div id="blueimp-gallery-carousel" class="blueimp-gallery blueimp-gallery-carousel">
                <div class="slides"></div>
                <h3 class="title"></h3>
                <a class="prev">‹</a>
                <a class="next">›</a>
                <a class="play-pause"></a>
                <ol class="indicator"></ol>
            </div>
        </div>
    </div>
    <div class="box footer">
        <hr>
        <div class="privacy">
            <p>This app has no official privacy policy. Your data will be uploaded to a service in order produce a picture.
                Your images will be public once you upload them and there is no automated way to remove them.</p>
        </div>
    </div>
    <p style="display: none" id="imageNameTemp"></p>
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/js/blueimp-gallery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

<script>

$(document).ready(function() {
    $("#addReviewForm").submit(function(event) {
        event.preventDefault(); // Prevent the default form submission behavior

        var formData = $(this).serialize(); // Serialize the form data
        var imageName = $("#imageNameTemp").text(); // Get the value from the temporary <p> element
        formData += "&imageName=" + encodeURIComponent(imageName); // Append the image name to the form data
        $.ajax({
            url: "/api/images/addReview", // Set the URL
            type: "POST", // Set the HTTP method
            data: formData, // Set the form data
            success: function(response) {
                // Request was successful
                console.log(response);
            },
            error: function(xhr, status, error) {
                // Request failed
                console.error(status + ": " + error);
            }
        });
    });
  });
    
    // init gallery for later use
    var gallery;

    // Grab links for images from backend api
    function fetchImageLinks() {
        // fetch('https://webappgb.azurewebsites.net/api/images/review/Apetri Stefan-Cosmin IMG_1080.jpg', {
        //   Method: 'GET',
        //   Headers: {
        //     Accept: 'application.json',
        //     'Content-Type': 'application/json'
        //   },
        //   Cache: 'default'
        // })
        // Fetch images
        $.get("api/Images/thumbnails", function(fetchedImageLinks) {
            console.log(fetchedImageLinks)

            // Check if anything is in there
            if ( _.isEmpty(fetchedImageLinks) ){
                console.log('empty fetched')
                // do nothing  
            } else {  
                const modifiedLinks = fetchedImageLinks.map(s => s.split("?")[0]);
                const resultArray = Array.from(modifiedLinks);
                resultArray.forEach(function (imageLink) {
                    $("#stored-images").append("<img src=\"" + imageLink + "\" alt=\"Italian Trulli\"><br>")
                })
            }     
        });
    }

    // // Start first interval
    fetchImageLinks()

    /* Dropzone */
    // "imageUpload" is the camelized version of the HTML element's ID
    Dropzone.options.imageUpload = {
        paramName: "files", // The name that will be used to transfer the file
        dictDefaultMessage: "Drop files here or Click to Upload",
        addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function() {
            myDropzone = this;
            myDropzone.on("success", function(file, response) {
                console.log("Success");
                console.log(file.name);
                $("#imageNameTemp").text(file.name);
                myDropzone.removeFile(file);
            });                    
        }
    };

</script>
